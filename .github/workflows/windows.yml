name: Windows

# 调整 action 规则
on:
  push:
    branches: [ "1.7.x*" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "1.7.x*" ]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
        build-type: [Release]   # Debug, Release
        generator: [ "Visual Studio 17 2022" ]
        arch: [ "Win32", "x64" ] # "Win32", "x64"
        toolset: [ "v143" ]  # "v143", "v142"
        test-static: [ "OFF" ]  # "ON", "OFF"
      fail-fast: false
    
    name: "MSVC ${{ matrix.toolset }} ${{ matrix.arch }} [${{ matrix.build-type }}] test-static=${{ matrix.test-static }} on ${{ matrix.os }}"
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DAPR_BUILD_TESTAPR=ON -DTEST_STATIC_LIBS=${{ matrix.test-static }} -G "${{ matrix.generator }}" -A ${{ matrix.arch }} -T ${{ matrix.toolset }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build-type }}

    - name: Test
      if: matrix.build-type == 'Debug'
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{ matrix.build-type }} --output-on-failure

    - name: Install
      run: cmake --install ${{github.workspace}}/build --config ${{ matrix.build-type }}
      
    - name: Archive artifacts for ${{ matrix.build-type }}
      if: matrix.build-type == 'Release' && matrix.test-static == 'OFF'
      uses: actions/upload-artifact@v4
      with:
          name: apr.${{ matrix.build-type }}.${{ matrix.arch}}
          retention-days: 5 # 保留期 
          compression-level: 9 # 压缩级别
          path: |
            C:/Program Files/APR/
            !C:/Program Files/APR/**/*.tmp
        
          